Import('buildEnv')
localBuildEnv = buildEnv.Clone()

rpcNetLibrary, rpcNetLibraryObjects, rpcLibrary, rpcLibraryObjects, rpc_lib_objs, rpcnetStaticLib, rpcfastStaticLib = SConscript('backend/SConscript')

# Common objects

commonSource = [
                'main/common/rtconfig.cc',
                'main/common/debug.cc',
                'main/common/cdebug.c',
                'main/common/rtcconfig.c'
               ]

commonObjects = localBuildEnv.SharedObject(commonSource)


# Client IPC layer

clt_lib_target = 'bcsclt'
clt_lib_objects = rpcNetLibraryObjects + rpcLibraryObjects + commonObjects
clt_lib_sources = [
                   'main/client/ipc.cc',
                   'main/client/shbuf.cc'
                  ]

bcsClientLibrary = localBuildEnv.SharedLibrary(target = clt_lib_target, source = clt_lib_sources + clt_lib_objects)

clt_lib_objs = localBuildEnv.Object(clt_lib_sources)
common_objs  = localBuildEnv.Object(commonSource)
bcs_lib_objs = rpc_lib_objs + clt_lib_objs + common_objs


# Server IPC layer

srv_lib_target = 'bcssrv'
srv_lib_objects = rpcNetLibraryObjects + rpcLibraryObjects + commonObjects
srv_lib_sources = [
                   'main/server/cltdsc.cc',
                   'main/server/ipc.cc',
		   'main/server/sessionmgr.cc',
		   'main/server/session.cc',
                   'main/server/shbuf.cc',
                   'main/server/shbufmgr.cc',
                  ]

bcsServerLibrary = localBuildEnv.SharedLibrary(target = srv_lib_target, source = srv_lib_sources + srv_lib_objects)
#bcsServerLibrary = localBuildEnv.Library(target = srv_lib_target, source = srv_lib_sources + srv_lib_objects)

Return('rpcNetLibrary', 'rpcLibrary', 'bcsClientLibrary', 'bcsServerLibrary', 'bcs_lib_objs', 'rpcnetStaticLib', 'rpcfastStaticLib')
