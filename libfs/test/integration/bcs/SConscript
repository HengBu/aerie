import os
import sys
import string
import testfw
import copy
from integration_test import runIntegrationTests

Import('mainEnv', 'testEnv')
myTestEnv = testEnv.Clone()

Import('fscLibrary')
Import('fssLibrary')
Import('mfsClientLibrary')
Import('mfsServerLibrary')
Import('commonLibrary')
Import('spaLibrary')
Import('ssaClientLibrary')
Import('ssaServerLibrary')
Import('bcsClientLibrary')
Import('bcsServerLibrary')
clientDepLibs = [mfsClientLibrary, fscLibrary, bcsClientLibrary, ssaClientLibrary, spaLibrary, commonLibrary]
serverDepLibs = [mfsServerLibrary, fssLibrary, bcsServerLibrary, ssaServerLibrary, spaLibrary, commonLibrary]
objects = myTestEnv['OBJECTS']

testProgram = myTestEnv.Program('test', source = [Glob('*.test.cc'), Glob('*.fixture.cc'), Glob('*.helper.cc'), objects], LIBS=['UnitTest++', 'pthread', 'rt']+clientDepLibs)
serverProgram = myTestEnv.Program('smain', source = ['smain.cc', 'ipc.handlers.cc'], LIBS=['pthread', 'rt']+serverDepLibs)
runtests = myTestEnv.Command("test.passed", ['test', fscLibrary], runIntegrationTests)


###############################################################################
# INTEGRATION TEST SCHEDULES
############################################################################### 


import test.integration.bcs.ipc
test.integration.bcs.ipc.addIntegrationTests(myTestEnv, Dir('#').abspath, testProgram, serverProgram)
