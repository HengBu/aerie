import os
import re
import sys
import string
import testfw
import copy
from integration_test import runIntegrationTests

Import('mainEnv', 'testEnv')
myTestEnv = testEnv.Clone()

Import('cfscLibrary')
Import('cfssLibrary')
Import('commonLibrary')
Import('spaLibrary')
Import('bcsClientLibrary')
Import('bcsServerLibrary')
Import('osdClientLibrary')
Import('osdServerLibrary')
clientDepLibs = [cfscLibrary, bcsClientLibrary, osdClientLibrary, spaLibrary, commonLibrary]
serverDepLibs = [cfssLibrary, bcsServerLibrary, osdServerLibrary, spaLibrary, commonLibrary]
objects = myTestEnv['OBJECTS']

serverProgram = myTestEnv.Program('smain', \
	source = myTestEnv['SERVER_OBJECTS'], LIBS=['pthread', 'rt']+serverDepLibs)
testProgram = myTestEnv.Program('test', \
	source = [Glob('*.test.cc'), Glob('*.fixture.cc'), Glob('*.helper.cc'), objects], \
	LIBS=['UnitTest++', 'pthread', 'rt']+clientDepLibs)
runtests = myTestEnv.Command("test.passed", ['test', cfscLibrary], runIntegrationTests)



###############################################################################
# INTEGRATION TEST SCHEDULES
############################################################################### 



import test.integration.cfs.namespace
import test.integration.cfs.file

test.integration.cfs.namespace.addIntegrationTests(myTestEnv, Dir('#').abspath, testProgram, serverProgram)
test.integration.cfs.file.addIntegrationTests(myTestEnv, Dir('#').abspath, testProgram, serverProgram)
