import os
import re
import sys
import string
import testfw
import copy
from integration_test import runIntegrationTests

Import('mainEnv', 'testEnv')
myTestEnv = testEnv.Clone()

Import('fscLibrary')
Import('fssLibrary')
Import('mfsLibrary')
Import('commonLibrary')
Import('chunkstoreLibrary')
Import('rpcLibrary')
depLibs = [mfsLibrary, fscLibrary, rpcLibrary, chunkstoreLibrary, commonLibrary]
serverDepLibs = [fssLibrary, rpcLibrary, chunkstoreLibrary, commonLibrary]
objects = myTestEnv['OBJECTS']

lockServerProgram = myTestEnv.Program('smain', \
	source = myTestEnv['SERVER_OBJECTS'], LIBS=['pthread', 'rt']+serverDepLibs)
hlockServerProgram = myTestEnv.Program('smain-hlock', \
	source = myTestEnv['HLOCK_SERVER_OBJECTS'], LIBS=['pthread', 'rt']+serverDepLibs)
testProgram = myTestEnv.Program('test', \
	source = [Glob('*.test.cc'), Glob('*.fixture.cc'), Glob('*.helper.cc'), objects], \
	LIBS=['UnitTest++', 'pthread', 'rt']+depLibs)
runtests = myTestEnv.Command("test.passed", ['test', fscLibrary], runIntegrationTests)



###############################################################################
# INTEGRATION TEST SCHEDULES
############################################################################### 

lock_test_list = [
                  ('TestLockUnlockSingleClient1', 1),
                  ('TestLockUnlockSingleClient2', 1),
                  ('TestLockUnlockConcurrentClients1', 2),
                  ('TestLockUnlockConcurrentClients2', 2),
                  ('TestLockUnlockConcurrentClients3', 2),
                  ('TestLockUnlockConcurrentClients4', 2),
                  ('TestLockConvert1', 2),
                  ('TestLockConvert2', 2),
                  ('TestLockCancel1', 2),
                  ('TestLockCancel2', 2),
                  ('TestSharedLockUnlockConcurrentClients1', 2),
                  ('TestSharedLockUnlockConcurrentClients2', 2),
	         ]

hlock_test_list = [
                   ('TestLockUnlockSingleClient1', 1),
                   ('TestLockUnlockConcurrentClient1', 2),
                   ('TestLockUnlockConcurrentClient2', 2),
	          ]


myTestEnv.addIntegrationTest(testfw.integration_test.IntegrationTest(
    name = 'Lock:TestLockUnlockSingle',
    testfw = testProgram, server = lockServerProgram,
    clients = { 
        'C1': ( testProgram, [('T1', 'Lock:TestLockUnlock')])
    },
	event_tuples = []
))


myTestEnv.addIntegrationTest(testfw.integration_test.IntegrationTest(
    name = 'Lock:TestLockUnlockConcurrent1',
    testfw = testProgram, server = lockServerProgram,
    clients = { 
        'C1': ( testProgram, [('T1', 'Lock:TestLockUnlock')]),
        'C2': ( testProgram, [('T1', 'Lock:TestLockUnlock')])
    },
    event_tuples = [('C1:T1:E2', 'C2:T1:E1'), 
                  ('C2:T1:E3', 'C1:T1:E3')]
))


myTestEnv.addIntegrationTest(testfw.integration_test.IntegrationTest(
    name = 'Lock:TestLockUnlockMultipleTimesConcurrent1',
    testfw = testProgram, server = lockServerProgram,
    clients = { 
        'C1': ( testProgram, [('T1', 'Lock:TestLockUnlockMultipleTimes')]),
        'C2': ( testProgram, [('T1', 'Lock:TestLockUnlockMultipleTimes')])
    },
    event_tuples = [('C1:T1:E1', 'C2:T1:E1')]
))
