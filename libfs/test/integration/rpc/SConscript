import os
import sys
import string
import testfw
import copy
from integration_test import runIntegrationTests

Import('mainEnv', 'testEnv')
configEnv = mainEnv.Clone()
myTestEnv = testEnv.Clone()

Import('fscLibrary')
Import('mfsLibrary')
Import('commonLibrary')
Import('chunkstoreLibrary')
Import('rpcLibrary')
Import('serverProgram')
depLibs = [mfsLibrary, fscLibrary, rpcLibrary, chunkstoreLibrary, commonLibrary]
objects = myTestEnv['OBJECTS']

# Integration tests

testProgram = myTestEnv.Program('test', source = [Glob('*.test.cxx'), Glob('*.fixture.cxx'), Glob('*.helper.cxx'), objects], LIBS=['UnitTest++', 'pthread', 'rt']+depLibs)
runtests = myTestEnv.Command("test.passed", ['test', fscLibrary], runIntegrationTests)

test = testfw.integration_test.IntegrationTest({})
print str(serverProgram[0])
print str(testProgram[0])
print os.getcwd()
test.addTest(None, 'S', str(serverProgram[0]), '-p 10000'.split(), {}, False)
test.addTest(None, 'C', os.path.join(os.getcwd(), str(testProgram[0])), '-t TestServerIsAlive -p 10000'.split(), {})
myTestEnv.addIntegrationTest(test)
