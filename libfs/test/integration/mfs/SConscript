import os
import re
import sys
import string
import testfw
import copy
from integration_test import runIntegrationTests

Import('mainEnv', 'testEnv')
myTestEnv = testEnv.Clone()

Import('fscLibrary')
Import('fssLibrary')
Import('mfsClientLibrary')
Import('mfsServerLibrary')
Import('commonLibrary')
Import('spaLibrary')
Import('ipcClientLibrary')
Import('ipcServerLibrary')
Import('ssaClientLibrary')
Import('ssaServerLibrary')
clientDepLibs = [mfsClientLibrary, fscLibrary, ipcClientLibrary, ssaClientLibrary, spaLibrary, commonLibrary]
serverDepLibs = [mfsServerLibrary, fssLibrary, ipcServerLibrary, ssaServerLibrary, spaLibrary, commonLibrary]
objects = myTestEnv['OBJECTS']

serverProgram = myTestEnv.Program('smain', \
	source = myTestEnv['SERVER_OBJECTS'], LIBS=['pthread', 'rt']+serverDepLibs)
testProgram = myTestEnv.Program('test', \
	source = [Glob('*.test.cc'), Glob('*.fixture.cc'), Glob('*.helper.cc'), objects], \
	LIBS=['UnitTest++', 'pthread', 'rt']+clientDepLibs)
runtests = myTestEnv.Command("test.passed", ['test', fscLibrary], runIntegrationTests)



###############################################################################
# INTEGRATION TEST SCHEDULES
############################################################################### 





import test.integration.mfs.namespace
import test.integration.mfs.file_inode
import test.integration.mfs.dir_inode

test.integration.mfs.namespace.addIntegrationTests(myTestEnv, Dir('#').abspath, testProgram, serverProgram)
test.integration.mfs.file_inode.addIntegrationTests(myTestEnv, Dir('#').abspath, testProgram, serverProgram)
test.integration.mfs.dir_inode.addIntegrationTests(myTestEnv, Dir('#').abspath, testProgram, serverProgram)
